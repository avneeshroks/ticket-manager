{"version":3,"sources":["components/Page.js","views/DashboardView/Header.js","components/Label.js","views/DashboardView/NewProjects.js","components/GenericMoreButton.js","views/DashboardView/PerformanceOverTime/Chart.js","views/DashboardView/PerformanceOverTime/index.js","views/DashboardView/RealTime/Chart.js","views/DashboardView/RealTime/index.js","hooks/useIsMountedRef.js","views/DashboardView/RoiPerCustomer.js","views/DashboardView/SystemHealth.js","views/DashboardView/TodaysMoney.js","views/DashboardView/index.js"],"names":["Page","forwardRef","ref","title","children","rest","timeRanges","value","text","useStyles","makeStyles","theme","root","actionIcon","marginRight","spacing","Header","className","classes","actionRef","useRef","useState","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","clsx","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","Button","onClick","SvgIcon","Menu","anchorEl","current","onClose","open","PaperProps","menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","map","t","MenuItem","key","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","textTransform","primary","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","style","defaultProps","label","marginLeft","avatar","contrastText","width","NewProjects","data","Card","Box","gutterBottom","flexWrap","Avatar","maxWidth","memo","props","moreRef","openMenu","setOpenMenu","Tooltip","IconButton","ListItemIcon","ListItemText","position","Chart","dataProp","labels","useTheme","options","responsive","maintainAspectRatio","animation","legend","layout","scales","xAxes","gridLines","drawBorder","ticks","fontColor","yAxes","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","callback","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","borderWidth","borderColor","background","default","titleFontColor","bodyFontColor","footerFontColor","callbacks","tooltipItem","yLabel","canvas","gradient","getContext","createLinearGradient","addColorStop","datasets","pointBorderColor","pointBorderWidth","pointRadius","pointBackgroundColor","chart","PerformanceOverTime","performance","thisWeek","thisMonth","thisYear","CardHeader","action","Divider","CardContent","barThickness","maxBarThickness","barPercentage","categoryPercentage","cornerRadius","stacked","marginTop","navigateNextIcon","RealTime","isMountedRef","isMounted","useEffect","useIsMountedRef","setData","getData","useCallback","prevData","newData","shift","push","setTimeout","max","random","Math","ceil","floor","pop","setInterval","i","length","subheader","subheaderTypographyProps","titleTypographyProps","List","pathname","views","page","ListItem","itemDivider","primaryTypographyProps","p","size","RoiPerCustomer","progress","margin","SystemHealth","LinearProgress","TodaysMoney","dark","minHeight","paddingTop","paddingBottom","breakpoints","up","paddingLeft","paddingRight","DashboardView","Container","lg","sm","xs"],"mappings":"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","file":"static/js/1.190dd4b5.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <title>{title}</title>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React, { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { Calendar as CalendarIcon } from 'react-feather';\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Here&apos;s what&apos;s happening\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <CalendarIcon />\n          </SvgIcon>\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map((t) => (\n            <MenuItem\n              key={t.value}\n              onClick={() => setTimeRange(t.text)}\n            >\n              {t.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { fade, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: \"center\",\n    borderRadius: 2,\n    display: \"inline-flex\",\n    flexGrow: 0,\n    whiteSpace: \"nowrap\",\n    cursor: \"default\",\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: \"center\",\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: \"uppercase\",\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08),\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08),\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08),\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08),\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08),\n  },\n}));\n\nfunction Label({ className, color, children, style, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={clsx(\n        classes.root,\n        {\n          [classes[color]]: color,\n        },\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"error\",\n    \"warning\",\n    \"success\",\n  ]),\n};\n\nLabel.defaultProps = {\n  className: \"\",\n  color: \"secondary\",\n};\n\nexport default Label;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nimport { Avatar, Box, Card, Typography, makeStyles } from \"@material-ui/core\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpenOutlined\";\n\nimport Label from \"components/Label\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  label: {\n    marginLeft: theme.spacing(1),\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48,\n  },\n}));\n\nfunction NewProjects({ className, ...rest }) {\n  const classes = useStyles();\n  const data = {\n    value: 12,\n    difference: -10,\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          New projects\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? \"success\" : \"error\"}\n          >\n            {data.difference > 0 ? \"+\" : \"\"}\n            {data.difference}%\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <FolderOpenIcon />\n      </Avatar>\n    </Card>\n  );\n}\n\nNewProjects.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default NewProjects;\n","import React, { useRef, useState, memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles,\n} from \"@material-ui/core\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport AchiveIcon from \"@material-ui/icons/ArchiveOutlined\";\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: \"100%\",\n  },\n}));\n\nfunction GenericMoreButton(props) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton {...props} onClick={handleMenuOpen} ref={moreRef}>\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default memo(GenericMoreButton);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\n\nimport {\n  fade,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({\n  className,\n  data: dataProp,\n  labels,\n  ...rest\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n\n    gradient.addColorStop(0, fade(theme.palette.secondary.main, 0.2));\n    gradient.addColorStop(0.9, 'rgba(255,255,255,0)');\n    gradient.addColorStop(1, 'rgba(255,255,255,0)');\n\n    return {\n      datasets: [\n        {\n          data: dataProp,\n          backgroundColor: gradient,\n          borderColor: theme.palette.secondary.main,\n          pointBorderColor: theme.palette.background.default,\n          pointBorderWidth: 3,\n          pointRadius: 6,\n          pointBackgroundColor: theme.palette.secondary.main\n        }\n      ],\n      labels\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 7,\n            callback: (value) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.default,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          let label = `Income: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Line\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nimport {\n  Box,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  makeStyles,\n} from \"@material-ui/core\";\nimport GenericMoreButton from \"components/GenericMoreButton\";\n\nimport Chart from \"./Chart\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: \"100%\",\n  },\n}));\n\nfunction PerformanceOverTime({ className, ...rest }) {\n  const classes = useStyles();\n  const performance = {\n    thisWeek: {\n      data: [],\n      labels: [],\n    },\n    thisMonth: {\n      data: [],\n      labels: [],\n    },\n    thisYear: {\n      data: [10, 5, 11, 20, 13, 28, 18, 4, 13, 12, 13, 5],\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ],\n    },\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Performance Over Time\"\n      />\n      <Divider />\n      <CardContent>\n        <PerfectScrollbar>\n          <Box height={375} minWidth={500}>\n            <Chart\n              className={classes.chart}\n              data={performance.thisYear.data}\n              labels={performance.thisYear.labels}\n            />\n          </Box>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n}\n\nPerformanceOverTime.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default PerformanceOverTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { Bar } from 'react-chartjs-2';\n\nimport { makeStyles, useTheme } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({\n  data: dataProp,\n  labels,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: theme.palette.secondary.main,\n        data: dataProp,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.9,\n        categoryPercentage: 1\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: false,\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            beginAtZero: true,\n            display: false\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.default,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        legend: () => {},\n        title: () => {},\n        label: (tooltipItem) => {\n          const label = `Views: ${tooltipItem.yLabel}`;\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Bar\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport useIsMountedRef from \"hooks/useIsMountedRef\";\n\nimport Chart from \"./Chart\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  current: {\n    marginTop: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5),\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction getRandomInt(min, max) {\n  // eslint-disable-next-line no-param-reassign\n  min = Math.ceil(min);\n  // eslint-disable-next-line no-param-reassign\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction RealTime({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [data, setData] = useState([\n    163,\n    166,\n    161,\n    159,\n    99,\n    163,\n    173,\n    166,\n    167,\n    183,\n    176,\n    172,\n  ]);\n\n  const getData = useCallback(() => {\n    if (isMountedRef.current) {\n      setData((prevData) => {\n        const newData = [...prevData];\n\n        newData.shift();\n        newData.push(0);\n\n        return newData;\n      });\n    }\n\n    setTimeout(() => {\n      if (isMountedRef.current) {\n        setData((prevData) => {\n          const newData = [...prevData];\n          const random = getRandomInt(100, 200);\n\n          newData.pop();\n          newData.push(random);\n\n          return newData;\n        });\n      }\n    }, 500);\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    setInterval(() => getData(), 2000);\n  }, [getData]);\n\n  const labels = data.map((value, i) => i);\n\n  const pages = [\n    {\n      pathname: \"/app/projects\",\n      views: \"24\",\n    },\n    {\n      pathname: \"/app/chat\",\n      views: \"21\",\n    },\n    {\n      pathname: \"/cart\",\n      views: \"15\",\n    },\n    {\n      pathname: \"/cart/checkout\",\n      views: \"8\",\n    },\n  ];\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader\n        action={\n          <Typography color=\"inherit\" variant=\"h3\">\n            {data[data.length - 1] === 0\n              ? data[data.length - 2]\n              : data[data.length - 1]}\n          </Typography>\n        }\n        classes={{ action: classes.current }}\n        subheader=\"Page views per second\"\n        subheaderTypographyProps={{ color: \"textSecondary\", variant: \"body2\" }}\n        title=\"Active users\"\n        titleTypographyProps={{ color: \"textPrimary\" }}\n      />\n      <Chart data={data} labels={labels} />\n      <List>\n        {pages.map((page) => (\n          <ListItem\n            classes={{ divider: classes.itemDivider }}\n            divider\n            key={page.pathname}\n          >\n            <ListItemText\n              primary={page.pathname}\n              primaryTypographyProps={{\n                color: \"textSecondary\",\n                variant: \"body2\",\n              }}\n            />\n            <Typography color=\"inherit\">{page.views}</Typography>\n          </ListItem>\n        ))}\n      </List>\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n        <Button component={RouterLink} size=\"small\" to=\"#\">\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nRealTime.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default RealTime;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nimport { Avatar, Box, Card, Typography, makeStyles } from \"@material-ui/core\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    color: theme.palette.secondary.main,\n    height: 48,\n    width: 48,\n  },\n}));\n\nfunction RoiPerCustomer({ className, ...rest }) {\n  const classes = useStyles();\n  const data = {\n    value: \"25.50\",\n    currency: \"$\",\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          color=\"inherit\"\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n        >\n          Roi per customer\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography color=\"inherit\" variant=\"h3\">\n            {data.currency}\n            {data.value}\n          </Typography>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar} color=\"inherit\">\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n}\n\nRoiPerCustomer.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default RoiPerCustomer;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport {\n  Box,\n  Card,\n  LinearProgress,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  progress: {\n    margin: theme.spacing(0, 1),\n    flexGrow: 1\n  }\n}));\n\nfunction SystemHealth({ className, ...rest }) {\n  const classes = useStyles();\n  const data = {\n    value: 97\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        component=\"h3\"\n        gutterBottom\n        variant=\"overline\"\n        color=\"textSecondary\"\n      >\n        System Health\n      </Typography>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexWrap=\"wrap\"\n      >\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {data.value}\n          %\n        </Typography>\n        <LinearProgress\n          className={classes.progress}\n          value={data.value}\n          color=\"secondary\"\n          variant=\"determinate\"\n        />\n      </Box>\n    </Card>\n  );\n}\n\nSystemHealth.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SystemHealth;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nimport { Avatar, Box, Card, Typography, makeStyles } from \"@material-ui/core\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\n\nimport Label from \"components/Label\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  label: {\n    marginLeft: theme.spacing(1),\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48,\n  },\n}));\n\nfunction TodaysMoney({ className, ...rest }) {\n  const classes = useStyles();\n  const data = {\n    value: \"24,000\",\n    currency: \"$\",\n    difference: 4,\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          Todays money\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            {data.currency}\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? \"success\" : \"error\"}\n          >\n            {data.difference > 0 ? \"+\" : \"\"}\n            {data.difference}%\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n}\n\nTodaysMoney.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default TodaysMoney;\n","import React from \"react\";\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\n\nimport Page from \"components/Page\";\n\nimport Header from \"./Header\";\nimport NewProjects from \"./NewProjects\";\nimport PerformanceOverTime from \"./PerformanceOverTime\";\nimport RealTime from \"./RealTime\";\nimport RoiPerCustomer from \"./RoiPerCustomer\";\nimport SystemHealth from \"./SystemHealth\";\nimport TodaysMoney from \"./TodaysMoney\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n  container: {\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: 64,\n      paddingRight: 64,\n    },\n  },\n}));\n\nfunction DashboardView() {\n  const classes = useStyles();\n  \n  return (\n    <Page className={classes.root} title=\"Ticker Manager Dashboard\">\n      <Container maxWidth={false} className={classes.container}>\n        <Header />\n        <Grid container spacing={3}>\n          <Grid item lg={3} sm={6} xs={12}>\n            <TodaysMoney />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <NewProjects />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <SystemHealth />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <RoiPerCustomer />\n          </Grid>\n          <Grid item lg={3} xs={12}>\n            <RealTime />\n          </Grid>\n          <Grid item lg={9} xs={12}>\n            <PerformanceOverTime />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nexport default DashboardView;\n"],"sourceRoot":""}